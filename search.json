[{"path":"https://csoneson.github.io/BiocHowTo/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 BiocHowTo authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://csoneson.github.io/BiocHowTo/articles/how-to-read-big-bam-file-in-chunks.html","id":"bioconductor-packages-used-in-this-document","dir":"Articles","previous_headings":"","what":"Bioconductor packages used in this document","title":"How to read a BAM file in chunks","text":"pasillaBamSubset GenomicAlignments Rsamtools","code":""},{"path":"https://csoneson.github.io/BiocHowTo/articles/how-to-read-big-bam-file-in-chunks.html","id":"how-to-read-a-bam-file-in-chunks","dir":"Articles","previous_headings":"","what":"How to read a BAM file in chunks","title":"How to read a BAM file in chunks","text":"large BAM file can iterated chunks, order reduce memory usage, setting yieldSize BamFile object. illustration, use data pasillaBamSubset data package. Iteration BAM file requires file opened, repeatedly queried inside loop, closed. Repeated calls GenomicAlignments::readGAlignments without opening file first result 100000 records returned time (yieldSize 100000). example, let’s calculate coverage bam file .","code":"suppressPackageStartupMessages({     library(pasillaBamSubset)     library(Rsamtools) }) # Path to a bam file with single-end reads (un1 <- untreated1_chr4()) #> [1] \"/Users/runner/work/_temp/Library/pasillaBamSubset/extdata/untreated1_chr4.bam\" bf <- BamFile(un1, yieldSize = 100000) suppressPackageStartupMessages({     library(GenomicAlignments) }) open(bf) cvg <- NULL repeat {     chunk <- readGAlignments(bf)     if (length(chunk) == 0L) {         break     }     chunk_cvg <- coverage(chunk)     if (is.null(cvg)) {         cvg <- chunk_cvg     } else {         cvg <- cvg + chunk_cvg     } } close(bf) cvg #> RleList of length 8 #> $chr2L #> integer-Rle of length 23011544 with 1 run #>   Lengths: 23011544 #>   Values :        0 #>  #> $chr2R #> integer-Rle of length 21146708 with 1 run #>   Lengths: 21146708 #>   Values :        0 #>  #> $chr3L #> integer-Rle of length 24543557 with 1 run #>   Lengths: 24543557 #>   Values :        0 #>  #> $chr3R #> integer-Rle of length 27905053 with 1 run #>   Lengths: 27905053 #>   Values :        0 #>  #> $chr4 #> integer-Rle of length 1351857 with 122061 runs #>   Lengths:  891   27    5   12   13   45    5 ...    3  106   75 1600   75 1659 #>   Values :    0    1    2    3    4    5    4 ...    6    0    1    0    1    0 #>  #> ... #> <3 more elements>"},{"path":"https://csoneson.github.io/BiocHowTo/articles/how-to-read-big-bam-file-in-chunks.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"How to read a BAM file in chunks","text":"","code":"sessionInfo() #> R Under development (unstable) (2025-02-08 r87709) #> Platform: aarch64-apple-darwin20 #> Running under: macOS Sonoma 14.7.2 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: UTC #> tzcode source: internal #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] GenomicAlignments_1.43.0    SummarizedExperiment_1.37.0 #>  [3] Biobase_2.67.0              MatrixGenerics_1.19.1       #>  [5] matrixStats_1.5.0           Rsamtools_2.23.1            #>  [7] Biostrings_2.75.3           XVector_0.47.2              #>  [9] GenomicRanges_1.59.1        GenomeInfoDb_1.43.2         #> [11] IRanges_2.41.2              S4Vectors_0.45.2            #> [13] BiocGenerics_0.53.3         generics_0.1.3              #> [15] pasillaBamSubset_0.45.0     BiocStyle_2.35.0            #>  #> loaded via a namespace (and not attached): #>  [1] Matrix_1.7-2            jsonlite_1.8.9          compiler_4.5.0          #>  [4] BiocManager_1.30.25     crayon_1.5.3            bitops_1.0-9            #>  [7] parallel_4.5.0          BiocParallel_1.41.0     yaml_2.3.10             #> [10] fastmap_1.2.0           lattice_0.22-6          R6_2.5.1                #> [13] S4Arrays_1.7.1          knitr_1.49              DelayedArray_0.33.3     #> [16] GenomeInfoDbData_1.2.13 rlang_1.1.5             xfun_0.50               #> [19] SparseArray_1.7.2       cli_3.6.3               grid_4.5.0              #> [22] digest_0.6.37           evaluate_1.0.3          codetools_0.2-20        #> [25] abind_1.4-8             rmarkdown_2.29          httr_1.4.7              #> [28] tools_4.5.0             htmltools_0.5.8.1       UCSC.utils_1.3.0"},{"path":"https://csoneson.github.io/BiocHowTo/articles/how-to-read-paired-end-reads-from-bam-file.html","id":"bioconductor-packages-used-in-this-document","dir":"Articles","previous_headings":"","what":"Bioconductor packages used in this document","title":"How to read paired-end reads from a BAM file","text":"pasillaBamSubset GenomicAlignments","code":""},{"path":"https://csoneson.github.io/BiocHowTo/articles/how-to-read-paired-end-reads-from-bam-file.html","id":"how-to-read-paired-end-reads-from-a-bam-file","dir":"Articles","previous_headings":"","what":"How to read paired-end reads from a BAM file","title":"How to read paired-end reads from a BAM file","text":"illustration, use data pasillaBamSubset data package. Paired-end reads can loaded GenomicAlignments::readGAlignmentPairs GenomicAlignments::readGAlignmentsList functions GenomicAlignments package. functions use mate pairing algorithm output different objects. Let’s start GenomicAlignments::readGAlignmentPairs: GAlignmentPairs class holds pairs; reads mate ambiguous pairing discarded. list element holds exactly 2 records (mated pair). Records can accessed first last segments template left right alignments. See ?GAlignmentPairs GenomicAlignments package information. readGAlignmentsList, mate pairing performed asMates set TRUE BamFile object, otherwise records treated single-end. GAlignmentsList general ‘list-like’ structure holds mate pairs well nonmates (.e., singletons, records unmapped mates etc). mates_status metadata column (accessed mcols) indicates records paired. Non-mated reads returned groups QNAME contain number records. non-mate groups range size 1 9.","code":"suppressPackageStartupMessages({     library(pasillaBamSubset) }) # Path to a bam file with paired-end reads (un3 <- untreated3_chr4()) #> [1] \"/Users/runner/work/_temp/Library/pasillaBamSubset/extdata/untreated3_chr4.bam\" suppressPackageStartupMessages({     library(GenomicAlignments) }) gapairs <- readGAlignmentPairs(un3) class(gapairs) #> [1] \"GAlignmentPairs\" #> attr(,\"package\") #> [1] \"GenomicAlignments\" gapairs #> GAlignmentPairs object with 75409 pairs, strandMode=1, and 0 metadata columns: #>           seqnames strand   :          ranges  --          ranges #>              <Rle>  <Rle>   :       <IRanges>  --       <IRanges> #>       [1]     chr4      +   :         169-205  --         326-362 #>       [2]     chr4      +   :         943-979  --       1086-1122 #>       [3]     chr4      +   :         944-980  --       1119-1155 #>       [4]     chr4      +   :         946-982  --        986-1022 #>       [5]     chr4      +   :        966-1002  --       1108-1144 #>       ...      ...    ... ...             ... ...             ... #>   [75405]     chr4      -   : 1348209-1348245  -- 1348063-1348099 #>   [75406]     chr4      -   : 1348211-1348247  -- 1348077-1348113 #>   [75407]     chr4      +   : 1348217-1348253  -- 1348215-1348251 #>   [75408]     chr4      +   : 1349196-1349232  -- 1349326-1349362 #>   [75409]     chr4      +   : 1349708-1349744  -- 1349838-1349874 #>   ------- #>   seqinfo: 8 sequences from an unspecified genome galist <- readGAlignmentsList(BamFile(un3, asMates = TRUE)) galist #> GAlignmentsList object of length 96636: #> [[1]] #> GAlignments object with 2 alignments and 0 metadata columns: #>       seqnames strand       cigar    qwidth     start       end     width #>          <Rle>  <Rle> <character> <integer> <integer> <integer> <integer> #>   [1]     chr4      +         37M        37       169       205        37 #>   [2]     chr4      -         37M        37       326       362        37 #>           njunc #>       <integer> #>   [1]         0 #>   [2]         0 #>   ------- #>   seqinfo: 8 sequences from an unspecified genome #>  #> [[2]] #> GAlignments object with 2 alignments and 0 metadata columns: #>       seqnames strand       cigar    qwidth     start       end     width #>          <Rle>  <Rle> <character> <integer> <integer> <integer> <integer> #>   [1]     chr4      +         37M        37       946       982        37 #>   [2]     chr4      -         37M        37       986      1022        37 #>           njunc #>       <integer> #>   [1]         0 #>   [2]         0 #>   ------- #>   seqinfo: 8 sequences from an unspecified genome #>  #> [[3]] #> GAlignments object with 2 alignments and 0 metadata columns: #>       seqnames strand       cigar    qwidth     start       end     width #>          <Rle>  <Rle> <character> <integer> <integer> <integer> <integer> #>   [1]     chr4      +         37M        37       943       979        37 #>   [2]     chr4      -         37M        37      1086      1122        37 #>           njunc #>       <integer> #>   [1]         0 #>   [2]         0 #>   ------- #>   seqinfo: 8 sequences from an unspecified genome #>  #> ... #> <96633 more elements> non_mates <- galist[unlist(mcols(galist)$mate_status) == \"unmated\"] table(elementNROWS(non_mates)) #>  #>     1     2     3     4     5     6     7     8     9  #> 18191  2888    69    60     7     8     2     1     1"},{"path":"https://csoneson.github.io/BiocHowTo/articles/how-to-read-paired-end-reads-from-bam-file.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"How to read paired-end reads from a BAM file","text":"","code":"sessionInfo() #> R Under development (unstable) (2025-02-08 r87709) #> Platform: aarch64-apple-darwin20 #> Running under: macOS Sonoma 14.7.2 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: UTC #> tzcode source: internal #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] GenomicAlignments_1.43.0    Rsamtools_2.23.1            #>  [3] Biostrings_2.75.3           XVector_0.47.2              #>  [5] SummarizedExperiment_1.37.0 Biobase_2.67.0              #>  [7] MatrixGenerics_1.19.1       matrixStats_1.5.0           #>  [9] GenomicRanges_1.59.1        GenomeInfoDb_1.43.2         #> [11] IRanges_2.41.2              S4Vectors_0.45.2            #> [13] BiocGenerics_0.53.3         generics_0.1.3              #> [15] pasillaBamSubset_0.45.0     BiocStyle_2.35.0            #>  #> loaded via a namespace (and not attached): #>  [1] Matrix_1.7-2            jsonlite_1.8.9          compiler_4.5.0          #>  [4] BiocManager_1.30.25     crayon_1.5.3            bitops_1.0-9            #>  [7] parallel_4.5.0          BiocParallel_1.41.0     yaml_2.3.10             #> [10] fastmap_1.2.0           lattice_0.22-6          R6_2.5.1                #> [13] S4Arrays_1.7.1          knitr_1.49              DelayedArray_0.33.3     #> [16] GenomeInfoDbData_1.2.13 rlang_1.1.5             xfun_0.50               #> [19] SparseArray_1.7.2       cli_3.6.3               digest_0.6.37           #> [22] grid_4.5.0              evaluate_1.0.3          codetools_0.2-20        #> [25] abind_1.4-8             rmarkdown_2.29          httr_1.4.7              #> [28] tools_4.5.0             htmltools_0.5.8.1       UCSC.utils_1.3.0"},{"path":"https://csoneson.github.io/BiocHowTo/articles/how-to-read-single-end-reads-from-bam-file.html","id":"bioconductor-packages-used-in-this-document","dir":"Articles","previous_headings":"","what":"Bioconductor packages used in this document","title":"How to read single-end reads from a BAM file","text":"pasillaBamSubset GenomicAlignments Rsamtools","code":""},{"path":"https://csoneson.github.io/BiocHowTo/articles/how-to-read-single-end-reads-from-bam-file.html","id":"how-to-read-single-end-reads-from-a-bam-file","dir":"Articles","previous_headings":"","what":"How to read single-end reads from a BAM file","title":"How to read single-end reads from a BAM file","text":"illustration, use data pasillaBamSubset data package. Several functions available reading BAM files R: GenomicAlignments::readGAlignments() GenomicAlignments::readGAlignmentPairs() GenomicAlignments::readGAlignmentsList() Rsamtools::scanBam() scanBam low-level function returns list lists discussed . See ?scanBam Rsamtools package information. Single-end reads can read readGAlignments function GenomicAlignments package. Data subsets can specified genomic position, field names, flag criteria using Rsamtools::ScanBamParam. , example import records overlap position 1 5000 negative strand chromosome 4, flag cigar metadata columns. Another approach subsetting data use Rsamtools::filterBam. function creates new BAM file records passing user-defined criteria. See ?filterBam Rsamtools package information.","code":"suppressPackageStartupMessages({     library(pasillaBamSubset) }) # Path to a bam file with single-end reads (un1 <- untreated1_chr4()) #> [1] \"/Users/runner/work/_temp/Library/pasillaBamSubset/extdata/untreated1_chr4.bam\" suppressPackageStartupMessages({     library(GenomicAlignments) }) gal <- readGAlignments(un1) class(gal) #> [1] \"GAlignments\" #> attr(,\"package\") #> [1] \"GenomicAlignments\" gal #> GAlignments object with 204355 alignments and 0 metadata columns: #>            seqnames strand       cigar    qwidth     start       end     width #>               <Rle>  <Rle> <character> <integer> <integer> <integer> <integer> #>        [1]     chr4      -         75M        75       892       966        75 #>        [2]     chr4      -         75M        75       919       993        75 #>        [3]     chr4      +         75M        75       924       998        75 #>        [4]     chr4      +         75M        75       936      1010        75 #>        [5]     chr4      +         75M        75       949      1023        75 #>        ...      ...    ...         ...       ...       ...       ...       ... #>   [204351]     chr4      +         75M        75   1348268   1348342        75 #>   [204352]     chr4      +         75M        75   1348268   1348342        75 #>   [204353]     chr4      +         75M        75   1348268   1348342        75 #>   [204354]     chr4      -         75M        75   1348449   1348523        75 #>   [204355]     chr4      -         75M        75   1350124   1350198        75 #>                njunc #>            <integer> #>        [1]         0 #>        [2]         0 #>        [3]         0 #>        [4]         0 #>        [5]         0 #>        ...       ... #>   [204351]         0 #>   [204352]         0 #>   [204353]         0 #>   [204354]         0 #>   [204355]         0 #>   ------- #>   seqinfo: 8 sequences from an unspecified genome suppressPackageStartupMessages({     library(Rsamtools) }) what <- c(\"flag\", \"cigar\") which <- GRanges(\"chr4\", IRanges(1, 5000)) flag <- scanBamFlag(isMinusStrand = TRUE) param <- ScanBamParam(which = which, what = what, flag = flag) neg <- readGAlignments(un1, param = param) neg #> GAlignments object with 37 alignments and 2 metadata columns: #>        seqnames strand       cigar    qwidth     start       end     width #>           <Rle>  <Rle> <character> <integer> <integer> <integer> <integer> #>    [1]     chr4      -         75M        75       892       966        75 #>    [2]     chr4      -         75M        75       919       993        75 #>    [3]     chr4      -         75M        75       967      1041        75 #>    [4]     chr4      -         75M        75      1035      1109        75 #>    [5]     chr4      -         75M        75      1236      1310        75 #>    ...      ...    ...         ...       ...       ...       ...       ... #>   [33]     chr4      -         75M        75      4995      5069        75 #>   [34]     chr4      -         75M        75      4997      5071        75 #>   [35]     chr4      -         75M        75      4997      5071        75 #>   [36]     chr4      -         75M        75      4998      5072        75 #>   [37]     chr4      -         75M        75      4999      5073        75 #>            njunc |      flag       cigar #>        <integer> | <integer> <character> #>    [1]         0 |        16         75M #>    [2]         0 |        16         75M #>    [3]         0 |        16         75M #>    [4]         0 |        16         75M #>    [5]         0 |        16         75M #>    ...       ... .       ...         ... #>   [33]         0 |        16         75M #>   [34]         0 |        16         75M #>   [35]         0 |        16         75M #>   [36]         0 |        16         75M #>   [37]         0 |        16         75M #>   ------- #>   seqinfo: 8 sequences from an unspecified genome"},{"path":"https://csoneson.github.io/BiocHowTo/articles/how-to-read-single-end-reads-from-bam-file.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"How to read single-end reads from a BAM file","text":"","code":"sessionInfo() #> R Under development (unstable) (2025-02-08 r87709) #> Platform: aarch64-apple-darwin20 #> Running under: macOS Sonoma 14.7.2 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: UTC #> tzcode source: internal #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] GenomicAlignments_1.43.0    Rsamtools_2.23.1            #>  [3] Biostrings_2.75.3           XVector_0.47.2              #>  [5] SummarizedExperiment_1.37.0 Biobase_2.67.0              #>  [7] MatrixGenerics_1.19.1       matrixStats_1.5.0           #>  [9] GenomicRanges_1.59.1        GenomeInfoDb_1.43.2         #> [11] IRanges_2.41.2              S4Vectors_0.45.2            #> [13] BiocGenerics_0.53.3         generics_0.1.3              #> [15] pasillaBamSubset_0.45.0     BiocStyle_2.35.0            #>  #> loaded via a namespace (and not attached): #>  [1] Matrix_1.7-2            jsonlite_1.8.9          compiler_4.5.0          #>  [4] BiocManager_1.30.25     crayon_1.5.3            bitops_1.0-9            #>  [7] parallel_4.5.0          BiocParallel_1.41.0     yaml_2.3.10             #> [10] fastmap_1.2.0           lattice_0.22-6          R6_2.5.1                #> [13] S4Arrays_1.7.1          knitr_1.49              DelayedArray_0.33.3     #> [16] GenomeInfoDbData_1.2.13 rlang_1.1.5             xfun_0.50               #> [19] SparseArray_1.7.2       cli_3.6.3               digest_0.6.37           #> [22] grid_4.5.0              evaluate_1.0.3          codetools_0.2-20        #> [25] abind_1.4-8             rmarkdown_2.29          httr_1.4.7              #> [28] tools_4.5.0             htmltools_0.5.8.1       UCSC.utils_1.3.0"},{"path":"https://csoneson.github.io/BiocHowTo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Charlotte Soneson. Author, maintainer. Hervé Pagès. Author. Dan Tenenbaum. Author. Valerie Obenchain. Author. Marc Carlson. Author. Martin Morgan. Author. James Hester. Author. Vince Carey. Author.","code":""},{"path":"https://csoneson.github.io/BiocHowTo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Soneson C, Pagès H, Tenenbaum D, Obenchain V, Carlson M, Morgan M, Hester J, Carey V (2025). BiocHowTo: Collection Documents Bioconductor. R package version 0.1.0.","code":"@Manual{,   title = {BiocHowTo: A Collection of How To Documents For Bioconductor},   author = {Charlotte Soneson and Hervé Pagès and Dan Tenenbaum and Valerie Obenchain and Marc Carlson and Martin Morgan and James Hester and Vince Carey},   year = {2025},   note = {R package version 0.1.0}, }"},{"path":"https://csoneson.github.io/BiocHowTo/index.html","id":"biochowto","dir":"","previous_headings":"","what":"A Collection of How To Documents For Bioconductor","title":"A Collection of How To Documents For Bioconductor","text":"repository contains short, stand-alone “” documents related Bioconductor.","code":""},{"path":"https://csoneson.github.io/BiocHowTo/index.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to contribute","title":"A Collection of How To Documents For Bioconductor","text":"Fork repository create new branch. Copy rename howto_template.qmd file inst/templates vignettes directory, edit copy accordingly. Please choose name new vignette way unique clearly indicates content. Note title vignette added title field %\\VignetteIndexEntry YAML section. Test vignette locally fresh R session, make sure self-contained runs without errors. Add name Author list DESCRIPTION file. Add new package using list dependencies package, e.g. using Add new vignette suitable section ‘Articles’ _pkgdown.yml file. Push changes forked repository open pull request devel branch parent repository.","code":"usethis::use_package(\"new_dependency\")"},{"path":"https://csoneson.github.io/BiocHowTo/index.html","id":"how-to-suggest-a-new-topic","dir":"","previous_headings":"","what":"How to suggest a new topic","title":"A Collection of How To Documents For Bioconductor","text":"suggest new topic HowTo, open issue provide details suggestion.","code":""}]
